#Stream Output Parser
#Input: log file generated by STREAM Benchmark
#Output: FileName, Copy Bandwidth, Initialization Time, Total Time 
#How to use:
# python streamOutputParser.py testo_DRAM_HotCold.log
#
# Jan 11, 2015
# Saeid Barati, UCHICAGO

import sys
import re
import numpy as np

if len(sys.argv) == 1:
	print "You can also give filename as a command line argument"
	sampleSize = int(raw_input("Enter Experiment Size: "))
	RunNumber = int(raw_input("Enter Run NUmber: "))
else:
	sampleSize = int(sys.argv[1])
	RunNumber = int(sys.argv[2])


addr="../Results/run"+str(RunNumber)+"/"
outputfile = open(addr+'stream_ompSummary.csv','w')
#outputfile.write(",BestCopyBW(MBps),AvgCopyBW(MBps),ExecutionTime(s)\n") 
outputfile.write(",ExecutionTime(s)\n") 

for i in range(sampleSize):
	inputfilename=addr+"stream_omp"+str(i)+".log"
	print inputfilename
	outputStr="stream_omp"+str(i)+","
	with open(inputfilename) as f:
		for line in f:
			#words=re.findall(r"[\w']+", line)
			words=line.split()
			#print words[0]
			if len(words) > 1 :
				if (words[0]=='Copy:'):
					#outputStr=outputStr+words[1]+","
					bestCopyBW=float(words[1])
					minTime=float(words[3])
					avgTime=float(words[2])
					AvgCopyBW=(minTime*bestCopyBW)/(avgTime)
					#outputStr=outputStr+str(AvgCopyBW)+","
					#print str(int(words[4][0]))
				if (words[0]=='Execution'):
					outputStr=outputStr+words[3]+","

	outputfile.write(outputStr+"\n") 


outputfile.close() 



